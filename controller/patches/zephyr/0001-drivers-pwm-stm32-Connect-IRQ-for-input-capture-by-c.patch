From 9990982d22d09e6b6ac4bff05586ae73e73810de Mon Sep 17 00:00:00 2001
From: Marek Metelski <marek@metelski.dev>
Date: Wed, 26 Apr 2023 21:23:22 +0200
Subject: [PATCH] drivers: pwm: stm32: Connect IRQ for input capture by 'cc'
 name

Some STM32 timers have more than one interrupt available.
When such timer is used it's likely that the first found interrupt
will not be the proper, 'cc' interrupt for input capture.

Existing implementation always connected the first irq, which worked
for timers with single, 'global' interrupt but broke input capture
for advanced timers with more interrupts.

Improve the IRQ connection logic by connecting the 'cc' interrupt
if it exists. Only if not found use the fallback mechanism of taking the
first index

Signed-off-by: Marek Metelski <marek@metelski.dev>
---
 drivers/pwm/pwm_stm32.c | 30 +++++++++++++++++++++++-------
 1 file changed, 23 insertions(+), 7 deletions(-)

diff --git a/drivers/pwm/pwm_stm32.c b/drivers/pwm/pwm_stm32.c
index b86572e429..3c45e1d3d8 100644
--- a/drivers/pwm/pwm_stm32.c
+++ b/drivers/pwm/pwm_stm32.c
@@ -690,13 +690,29 @@ static int pwm_stm32_init(const struct device *dev)
 }
 
 #ifdef CONFIG_PWM_CAPTURE
-#define IRQ_CONFIG_FUNC(index)                                                 \
-static void pwm_stm32_irq_config_func_##index(const struct device *dev)        \
-{                                                                              \
-	IRQ_CONNECT(DT_IRQN(DT_INST_PARENT(index)),                            \
-			DT_IRQ(DT_INST_PARENT(index), priority),               \
-			pwm_stm32_isr, DEVICE_DT_INST_GET(index), 0);          \
-	irq_enable(DT_IRQN(DT_INST_PARENT(index)));                            \
+#define IRQ_CONNECT_AND_ENABLE_BY_NAME(index, name) 				\
+{										\
+	IRQ_CONNECT(DT_IRQ_BY_NAME(DT_INST_PARENT(index), name, irq),		\
+			DT_IRQ_BY_NAME(DT_INST_PARENT(index), name, priority),	\
+			pwm_stm32_isr, DEVICE_DT_INST_GET(index), 0);		\
+	irq_enable(DT_IRQ_BY_NAME(DT_INST_PARENT(index), name, irq));		\
+}
+
+#define IRQ_CONNECT_AND_ENABLE_DEFAULT(index)					\
+{										\
+	IRQ_CONNECT(DT_IRQN(DT_INST_PARENT(index)),				\
+			DT_IRQ(DT_INST_PARENT(index), priority),		\
+			pwm_stm32_isr, DEVICE_DT_INST_GET(index), 0);		\
+	irq_enable(DT_IRQN(DT_INST_PARENT(index)));				\
+}
+
+#define IRQ_CONFIG_FUNC(index)                                                 	\
+static void pwm_stm32_irq_config_func_##index(const struct device *dev)        	\
+{                                                                              	\
+	COND_CODE_1(DT_IRQ_HAS_NAME(DT_INST_PARENT(index), cc),			\
+		(IRQ_CONNECT_AND_ENABLE_BY_NAME(index, cc)),			\
+		(IRQ_CONNECT_AND_ENABLE_DEFAULT(index))				\
+	);								 	\
 }
 #define CAPTURE_INIT(index)                                                    \
 	.irq_config_func = pwm_stm32_irq_config_func_##index
-- 
2.30.2

